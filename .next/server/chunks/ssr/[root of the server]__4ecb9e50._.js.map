{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/state/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface FiltersState {\r\n  location: string;\r\n  beds: string;\r\n  baths: string;\r\n  propertyType: string;\r\n  amenities: string[];\r\n  availableFrom: string;\r\n  priceRange: [number, number] | [null, null];\r\n  squareFeet: [number, number] | [null, null];\r\n  coordinates: [number, number];\r\n}\r\n\r\ninterface InitialStateTypes {\r\n  isFiltersFullOpen: boolean;\r\n  filters: FiltersState;\r\n  viewmode: \"grid\" | \"list\";\r\n}\r\n\r\nexport const initialState: InitialStateTypes = {\r\n  isFiltersFullOpen: false,\r\n  filters: {\r\n    location: \"Los Angeles\",\r\n    beds: \"any\",\r\n    baths: \"any\",\r\n    propertyType: \"any\",\r\n    amenities: [],\r\n    availableFrom: \"any\",\r\n    priceRange: [null, null],\r\n    squareFeet: [null, null],\r\n    coordinates: [-118.2437, 34.0522],\r\n  },\r\n  viewmode: \"grid\",\r\n};\r\n\r\nexport const globalSlice = createSlice({\r\n  name: \"global\",\r\n  initialState,\r\n  reducers: {\r\n    setFilters: (state, action: PayloadAction<Partial<FiltersState>>) => {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n    setViewMode: (state, action: PayloadAction<\"grid\" | \"list\">) => {\r\n      state.viewmode = action.payload;\r\n    },\r\n    toggleFiltersFullOpen: (state) => {\r\n      state.isFiltersFullOpen = !state.isFiltersFullOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilters, toggleFiltersFullOpen, setViewMode } =\r\n  globalSlice.actions;\r\n\r\nexport default globalSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAoBO,MAAM,eAAkC;IAC7C,mBAAmB;IACnB,SAAS;QACP,UAAU;QACV,MAAM;QACN,OAAO;QACP,cAAc;QACd,WAAW,EAAE;QACb,eAAe;QACf,YAAY;YAAC;YAAM;SAAK;QACxB,YAAY;YAAC;YAAM;SAAK;QACxB,aAAa;YAAC,CAAC;YAAU;SAAQ;IACnC;IACA,UAAU;AACZ;AAEO,MAAM,cAAc,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU;QACR,YAAY,CAAC,OAAO;YAClB,MAAM,OAAO,GAAG;gBAAE,GAAG,MAAM,OAAO;gBAAE,GAAG,OAAO,OAAO;YAAC;QACxD;QACA,aAAa,CAAC,OAAO;YACnB,MAAM,QAAQ,GAAG,OAAO,OAAO;QACjC;QACA,uBAAuB,CAAC;YACtB,MAAM,iBAAiB,GAAG,CAAC,MAAM,iBAAiB;QACpD;IACF;AACF;AAEO,MAAM,EAAE,UAAU,EAAE,qBAAqB,EAAE,WAAW,EAAE,GAC7D,YAAY,OAAO;uCAEN,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { toast } from \"sonner\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function formatEnumString(str: string) {\r\n  return str.replace(/([A-Z])/g, \" $1\").trim();\r\n}\r\n\r\nexport function formatPriceValue(value: number | null, isMin: boolean) {\r\n  if (value === null || value === 0) return isMin ? \"Min Price\" : \"Max Price\";\r\n  if (value >= 1000) {\r\n    const kValue = value / 1000;\r\n    return isMin ? `$${kValue}k+` : `<$${kValue}k`;\r\n  }\r\n  return isMin ? `$${value}+` : `<$${value}`;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function cleanParams(params: Record<string, any>): Record<string, any> {\r\n  return Object.fromEntries(\r\n    Object.entries(params).filter(\r\n      (\r\n        [_, value] // eslint-disable-line @typescript-eslint/no-unused-vars\r\n      ) =>\r\n        value !== undefined &&\r\n        value !== \"any\" &&\r\n        value !== \"\" &&\r\n        (Array.isArray(value) ? value.some((v) => v !== null) : value !== null)\r\n    )\r\n  );\r\n}\r\n\r\ntype MutationMessages = {\r\n  success?: string;\r\n  error: string;\r\n};\r\n\r\nexport const withToast = async <T>(\r\n  mutationFn: Promise<T>,\r\n  messages: Partial<MutationMessages>\r\n) => {\r\n  const { success, error } = messages;\r\n\r\n  try {\r\n    const result = await mutationFn;\r\n    if (success) toast.success(success);\r\n    return result;\r\n  } catch (err) {\r\n    if (error) toast.error(error);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createNewUserInDatabase = async (\r\n  user: any,\r\n  idToken: any,\r\n  userRole: string,\r\n  fetchWithBQ: any\r\n) => {\r\n  const createEndpoint =\r\n    userRole?.toLowerCase() === \"manager\" ? \"/managers\" : \"/tenants\";\r\n\r\n  const createUserResponse = await fetchWithBQ({\r\n    url: createEndpoint,\r\n    method: \"POST\",\r\n    body: {\r\n      cognitoId: user.userId,\r\n      name: user.username,\r\n      email: idToken?.payload?.email || \"\",\r\n      phoneNumber: \"\",\r\n    },\r\n  });\r\n\r\n  if (createUserResponse.error) {\r\n    throw new Error(\"Failed to create user record\");\r\n  }\r\n\r\n  return createUserResponse;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,iBAAiB,GAAW;IAC1C,OAAO,IAAI,OAAO,CAAC,YAAY,OAAO,IAAI;AAC5C;AAEO,SAAS,iBAAiB,KAAoB,EAAE,KAAc;IACnE,IAAI,UAAU,QAAQ,UAAU,GAAG,OAAO,QAAQ,cAAc;IAChE,IAAI,SAAS,MAAM;QACjB,MAAM,SAAS,QAAQ;QACvB,OAAO,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAChD;IACA,OAAO,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO;AAC5C;AAGO,SAAS,YAAY,MAA2B;IACrD,OAAO,OAAO,WAAW,CACvB,OAAO,OAAO,CAAC,QAAQ,MAAM,CAC3B,CACE,CAAC,GAAG,MAAM,CAAC,wDAAwD;OAEnE,UAAU,aACV,UAAU,SACV,UAAU,MACV,CAAC,MAAM,OAAO,CAAC,SAAS,MAAM,IAAI,CAAC,CAAC,IAAM,MAAM,QAAQ,UAAU,IAAI;AAG9E;AAOO,MAAM,YAAY,OACvB,YACA;IAEA,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG;IAE3B,IAAI;QACF,MAAM,SAAS,MAAM;QACrB,IAAI,SAAS,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAC3B,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,IAAI,OAAO,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACvB,MAAM;IACR;AACF;AAEO,MAAM,0BAA0B,OACrC,MACA,SACA,UACA;IAEA,MAAM,iBACJ,UAAU,kBAAkB,YAAY,cAAc;IAExD,MAAM,qBAAqB,MAAM,YAAY;QAC3C,KAAK;QACL,QAAQ;QACR,MAAM;YACJ,WAAW,KAAK,MAAM;YACtB,MAAM,KAAK,QAAQ;YACnB,OAAO,SAAS,SAAS,SAAS;YAClC,aAAa;QACf;IACF;IAEA,IAAI,mBAAmB,KAAK,EAAE;QAC5B,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/state/api.ts"],"sourcesContent":["import { cleanParams, createNewUserInDatabase, withToast } from \"@/lib/utils\";\r\nimport {\r\n  Application,\r\n  Lease,\r\n  Manager,\r\n  Payment,\r\n  Property,\r\n  Tenant,\r\n} from \"@/types/prismaTypes\";\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { fetchAuthSession, getCurrentUser } from \"aws-amplify/auth\";\r\nimport { FiltersState } from \".\";\r\n\r\nexport const api = createApi({\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL,\r\n    prepareHeaders: async (headers) => {\r\n      const session = await fetchAuthSession();\r\n      const { idToken } = session.tokens ?? {};\r\n      if (idToken) {\r\n        headers.set(\"Authorization\", `Bearer ${idToken}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  reducerPath: \"api\",\r\n  tagTypes: [\r\n    \"Managers\",\r\n    \"Tenants\",\r\n    \"Properties\",\r\n    \"PropertyDetails\",\r\n    \"Leases\",\r\n    \"Payments\",\r\n    \"Applications\",\r\n  ],\r\n  endpoints: (build) => ({\r\n    getAuthUser: build.query<User, void>({\r\n      queryFn: async (_, _queryApi, _extraoptions, fetchWithBQ) => {\r\n        try {\r\n          const session = await fetchAuthSession();\r\n          const { idToken } = session.tokens ?? {};\r\n          const user = await getCurrentUser();\r\n          const userRole = idToken?.payload[\"custom:role\"] as string;\r\n\r\n          const endpoint =\r\n            userRole === \"manager\"\r\n              ? `/managers/${user.userId}`\r\n              : `/tenants/${user.userId}`;\r\n\r\n          let userDetailsResponse = await fetchWithBQ(endpoint);\r\n\r\n          // if user doesn't exist, create new user\r\n\r\n          if (\r\n            userDetailsResponse.error &&\r\n            userDetailsResponse.error.status === 404\r\n          ) {\r\n            userDetailsResponse = await createNewUserInDatabase(\r\n              user,\r\n              idToken,\r\n              userRole,\r\n              fetchWithBQ\r\n            );\r\n          }\r\n\r\n          return {\r\n            data: {\r\n              cognitoInfo: { ...user },\r\n              userInfo: userDetailsResponse.data as Tenant | Manager,\r\n              userRole,\r\n              // session -- this could add session info if wanted\r\n            },\r\n          };\r\n        } catch (error: any) {\r\n          return { error: error.message || \"Could not fetch user data\" };\r\n        }\r\n      },\r\n    }),\r\n\r\n    // property related endpoints\r\n    getProperties: build.query<\r\n      Property[],\r\n      Partial<FiltersState> & { favoriteIds?: number[] }\r\n    >({\r\n      query: (filters) => {\r\n        const params = cleanParams({\r\n          location: filters.location,\r\n          priceMin: filters.priceRange?.[0],\r\n          priceMax: filters.priceRange?.[1],\r\n          beds: filters.beds,\r\n          baths: filters.baths,\r\n          propertyType: filters.propertyType,\r\n          squareFeetMin: filters.squareFeet?.[0],\r\n          squareFeetMax: filters.squareFeet?.[1],\r\n          amenities: filters.amenities?.join(\",\"),\r\n          availableFrom: filters.availableFrom,\r\n          favoriteIds: filters.favoriteIds?.join(\",\"),\r\n          latitude: filters.coordinates?.[1],\r\n          longitude: filters.coordinates?.[0],\r\n        });\r\n\r\n        return { url: \"properties\", params };\r\n      },\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: \"Properties\" as const, id })),\r\n              { type: \"Properties\", id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Properties\", id: \"LIST\" }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch properties.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    getProperty: build.query<Property, number>({\r\n      query: (id) => `properties/${id}`,\r\n      providesTags: (result, error, id) => [{ type: \"PropertyDetails\", id }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to load property details.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    // tenant related endpoints\r\n\r\n    getTenant: build.query<Tenant, string>({\r\n      query: (cognitoId) => `tenants/${cognitoId}`,\r\n      providesTags: (result) => [{ type: \"Tenants\", id: result?.id }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to load tenant profile.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    getCurrentResidences: build.query<Property[], string>({\r\n      query: (cognitoId) => `tenants/${cognitoId}/current-residences`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: \"Properties\" as const, id })),\r\n              { type: \"Properties\", id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Properties\", id: \"LIST\" }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch current residences.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    updateTenantSettings: build.mutation<\r\n      Tenant,\r\n      { cognitoId: string } & Partial<Tenant>\r\n    >({\r\n      query: ({ cognitoId, ...updatedTenant }) => ({\r\n        url: `tenants/${cognitoId}`,\r\n        method: \"PUT\",\r\n        body: updatedTenant,\r\n      }),\r\n      invalidatesTags: (result) => [{ type: \"Tenants\", id: result?.id }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Settings updated successfully!\",\r\n          error: \"Failed to update settings.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    addFavoriteProperty: build.mutation<\r\n      Tenant,\r\n      { cognitoId: string; propertyId: number }\r\n    >({\r\n      query: ({ cognitoId, propertyId }) => ({\r\n        url: `tenants/${cognitoId}/favorites/${propertyId}`,\r\n        method: \"POST\",\r\n      }),\r\n      invalidatesTags: (result) => [\r\n        { type: \"Tenants\", id: result?.id },\r\n        { type: \"Properties\", id: \"LIST\" },\r\n      ],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Added to favorites!!\",\r\n          error: \"Failed to add to favorites\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    removeFavoriteProperty: build.mutation<\r\n      Tenant,\r\n      { cognitoId: string; propertyId: number }\r\n    >({\r\n      query: ({ cognitoId, propertyId }) => ({\r\n        url: `tenants/${cognitoId}/favorites/${propertyId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: (result) => [\r\n        { type: \"Tenants\", id: result?.id },\r\n        { type: \"Properties\", id: \"LIST\" },\r\n      ],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Removed from favorites!\",\r\n          error: \"Failed to remove from favorites.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    // manager related endpoints\r\n\r\n    getManagerProperties: build.query<Property[], string>({\r\n      query: (cognitoId) => `managers/${cognitoId}/properties`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: \"Properties\" as const, id })),\r\n              { type: \"Properties\", id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Properties\", id: \"LIST\" }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to load manager profile.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    updateManagerSettings: build.mutation<\r\n      Manager,\r\n      { cognitoId: string } & Partial<Manager>\r\n    >({\r\n      query: ({ cognitoId, ...updatedManager }) => ({\r\n        url: `managers/${cognitoId}`,\r\n        method: \"PUT\",\r\n        body: updatedManager,\r\n      }),\r\n      invalidatesTags: (result) => [{ type: \"Managers\", id: result?.id }],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Settings updated successfully!\",\r\n          error: \"Failed to update settings.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    createProperty: build.mutation<Property, FormData>({\r\n      query: (newProperty) => ({\r\n        url: `properties`,\r\n        method: \"POST\",\r\n        body: newProperty,\r\n      }),\r\n      invalidatesTags: (result) => [\r\n        { type: \"Properties\", id: \"LIST\" },\r\n        { type: \"Managers\", id: result?.manager?.id },\r\n      ],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Property created successfully!\",\r\n          error: \"Failed to create property.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    // lease related enpoints\r\n    getLeases: build.query<Lease[], number>({\r\n      query: () => \"leases\",\r\n      providesTags: [\"Leases\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch leases.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    getPropertyLeases: build.query<Lease[], number>({\r\n      query: (propertyId) => `properties/${propertyId}/leases`,\r\n      providesTags: [\"Leases\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch property leases.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    getPayments: build.query<Payment[], number>({\r\n      query: (leaseId) => `leases/${leaseId}/payments`,\r\n      providesTags: [\"Payments\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch payment info.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    // application related endpoints\r\n\r\n    getApplications: build.query<\r\n      Application[],\r\n      { userId?: string; userType?: string }\r\n    >({\r\n      query: (params) => {\r\n        const queryParams = new URLSearchParams();\r\n        if (params.userId) {\r\n          queryParams.append(\"userId\", params.userId.toString());\r\n        }\r\n        if (params.userType) {\r\n          queryParams.append(\"userType\", params.userType);\r\n        }\r\n\r\n        return `applications?${queryParams.toString()}`;\r\n      },\r\n      providesTags: [\"Applications\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          error: \"Failed to fetch applications.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    updateApplicationStatus: build.mutation<\r\n      Application & { lease?: Lease },\r\n      { id: number; status: string }\r\n    >({\r\n      query: ({ id, status }) => ({\r\n        url: `applications/${id}/status`,\r\n        method: \"PUT\",\r\n        body: { status },\r\n      }),\r\n      invalidatesTags: [\"Applications\", \"Leases\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Application status updated successfully!\",\r\n          error: \"Failed to update application settings.\",\r\n        });\r\n      },\r\n    }),\r\n\r\n    createApplication: build.mutation<Application, Partial<Application>>({\r\n      query: (body) => ({\r\n        url: `applications`,\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n      invalidatesTags: [\"Applications\"],\r\n      async onQueryStarted(_, { queryFulfilled }) {\r\n        await withToast(queryFulfilled, {\r\n          success: \"Application created successfully!\",\r\n          error: \"Failed to create applications.\",\r\n        });\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAuthUserQuery,\r\n  useUpdateTenantSettingsMutation,\r\n  useUpdateManagerSettingsMutation,\r\n  useGetPropertiesQuery,\r\n  useGetPropertyQuery,\r\n  useGetTenantQuery,\r\n  useAddFavoritePropertyMutation,\r\n  useRemoveFavoritePropertyMutation,\r\n  useGetCurrentResidencesQuery,\r\n  useGetLeasesQuery,\r\n  useGetPaymentsQuery,\r\n  useGetManagerPropertiesQuery,\r\n  useGetPropertyLeasesQuery,\r\n  useGetApplicationsQuery,\r\n  useUpdateApplicationStatusMutation,\r\n  useCreateApplicationMutation,\r\n  useCreatePropertyMutation,\r\n} = api;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/state/redux.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRef } from \"react\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport globalReducer from \"@/state\";\r\nimport { api } from \"@/state/api\";\r\n\r\n/* REDUX STORE */\r\nconst rootReducer = combineReducers({\r\n  global: globalReducer,\r\n  [api.reducerPath]: api.reducer,\r\n});\r\n\r\nexport const makeStore = () => {\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware().concat(api.middleware),\r\n  });\r\n};\r\n\r\n/* REDUX TYPES */\r\nexport type AppStore = ReturnType<typeof makeStore>;\r\nexport type RootState = ReturnType<AppStore[\"getState\"]>;\r\nexport type AppDispatch = AppStore[\"dispatch\"];\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n/* PROVIDER */\r\nexport default function StoreProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const storeRef = useRef<AppStore | null>(null);\r\n  if (!storeRef.current) {\r\n    storeRef.current = makeStore();\r\n    setupListeners(storeRef.current.dispatch);\r\n  }\r\n  return <Provider store={storeRef.current}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AARA;;;;;;;;;AAUA,eAAe,GACf,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,QAAQ,qHAAA,CAAA,UAAa;IACrB,CAAC,mHAAA,CAAA,MAAG,CAAC,WAAW,CAAC,EAAE,mHAAA,CAAA,MAAG,CAAC,OAAO;AAChC;AAEO,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;QACT,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,mHAAA,CAAA,MAAG,CAAC,UAAU;IAChD;AACF;AAMO,MAAM,iBAAiB,IAAM,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;AACvC,MAAM,iBAAkD,yJAAA,CAAA,cAAW;AAG3D,SAAS,cAAc,EACpC,QAAQ,EAGT;IACC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IACzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG;QACnB,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,CAAC,QAAQ;IAC1C;IACA,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/app/%28auth%29/authProvider.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Amplify } from \"aws-amplify\";\r\n\r\nimport {\r\n  Authenticator,\r\n  Heading,\r\n  Radio,\r\n  RadioGroupField,\r\n  useAuthenticator,\r\n  View,\r\n} from \"@aws-amplify/ui-react\";\r\nimport \"@aws-amplify/ui-react/styles.css\";\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\n\r\n// https://docs.amplify.aws/gen1/javascript/tools/libraries/configure-categories/\r\nAmplify.configure({\r\n  Auth: {\r\n    Cognito: {\r\n      userPoolId: process.env.NEXT_PUBLIC_AWS_COGNITO_USER_POOL_ID!,\r\n      userPoolClientId:\r\n        process.env.NEXT_PUBLIC_AWS_COGNITO_USER_POOL_CLIENT_ID!,\r\n    },\r\n  },\r\n});\r\n\r\nconst components = {\r\n  Header() {\r\n    return (\r\n      <View className=\"mt-4 mb-7\">\r\n        <Heading level={3} className=\"!text-2xl !font-bold\">\r\n          RENT\r\n          <span className=\"text-secondary-500 font-light hover:!text-primary-300\">\r\n            FIND\r\n          </span>\r\n        </Heading>\r\n        <p className=\"text-muted-foreground mt-2\">\r\n          <span className=\"font-bold\">Welcome!</span> Please sign in to continue\r\n        </p>\r\n      </View>\r\n    );\r\n  },\r\n  SignIn: {\r\n    Footer() {\r\n      const { toSignUp } = useAuthenticator();\r\n      return (\r\n        <View className=\"text-center mt-4\">\r\n          <p className=\"text-muted-foreground\">\r\n            Don&apos;t have an account?{\" \"}\r\n            <button\r\n              onClick={toSignUp}\r\n              className=\"text-primary hover:underline bg-transparent border-none p-0\"\r\n            >\r\n              Sign up here\r\n            </button>\r\n          </p>\r\n        </View>\r\n      );\r\n    },\r\n  },\r\n  SignUp: {\r\n    FormFields() {\r\n      const { validationErrors } = useAuthenticator();\r\n\r\n      return (\r\n        <>\r\n          <Authenticator.SignUp.FormFields />\r\n          <RadioGroupField\r\n            legend=\"Role\"\r\n            name=\"custom:role\"\r\n            errorMessage={validationErrors?.[\"custom:role\"]}\r\n            hasError={!!validationErrors?.[\"custom:role\"]}\r\n            isRequired\r\n          >\r\n            <Radio value=\"tenant\">Tenant</Radio>\r\n            <Radio value=\"manager\">Manager</Radio>\r\n          </RadioGroupField>\r\n        </>\r\n      );\r\n    },\r\n\r\n    Footer() {\r\n      const { toSignIn } = useAuthenticator();\r\n      return (\r\n        <View className=\"text-center mt-4\">\r\n          <p className=\"text-muted-foreground\">\r\n            Already have an account?{\" \"}\r\n            <button\r\n              onClick={toSignIn}\r\n              className=\"text-primary hover:underline bg-transparent border-none p-0\"\r\n            >\r\n              Sign in\r\n            </button>\r\n          </p>\r\n        </View>\r\n      );\r\n    },\r\n  },\r\n};\r\n\r\nconst formFields = {\r\n  signIn: {\r\n    username: {\r\n      placeholder: \"Enter your email\",\r\n      label: \"Email\",\r\n      isRequired: true,\r\n    },\r\n    password: {\r\n      placeholder: \"Enter your password\",\r\n      label: \"Password\",\r\n      isRequired: true,\r\n    },\r\n  },\r\n  signUp: {\r\n    username: {\r\n      order: 1,\r\n      placeholder: \"Choose a username\",\r\n      label: \"Username\",\r\n      isRequired: true,\r\n    },\r\n    email: {\r\n      order: 2,\r\n      placeholder: \"Enter your email address\",\r\n      label: \"Email\",\r\n      isRequired: true,\r\n    },\r\n    password: {\r\n      order: 3,\r\n      placeholder: \"Create a password\",\r\n      label: \"Password\",\r\n      isRequired: true,\r\n    },\r\n    confirm_password: {\r\n      order: 4,\r\n      placeholder: \"Confirm your password\",\r\n      label: \"Confirm Password\",\r\n      isRequired: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst Auth = ({ children }: { children: React.ReactNode }) => {\r\n  const { user } = useAuthenticator((context) => [context.user]);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  const isAuthPage = pathname.match(/^\\/(signin|signup)$/);\r\n  const isDashboardPage =\r\n    pathname.startsWith(\"/manager\") || pathname.startsWith(\"/tenants\");\r\n\r\n  // Redirect authenticated users away from auth pages\r\n  useEffect(() => {\r\n    if (user && isAuthPage) {\r\n      router.push(\"/\");\r\n    }\r\n  }, [user, isAuthPage, router]);\r\n\r\n  // Allow access to public pages without authentication\r\n  if (!isAuthPage && !isDashboardPage) {\r\n    return <>{children}</>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      <Authenticator\r\n        initialState={pathname.includes(\"signup\") ? \"signUp\" : \"signIn\"}\r\n        components={components}\r\n        formFields={formFields}\r\n      >\r\n        {() => <>{children}</>}\r\n      </Authenticator>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/app/providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport StoreProvider from \"@/state/redux\";\r\nimport { Authenticator } from \"@aws-amplify/ui-react\";\r\nimport Auth from \"./(auth)/authProvider\";\r\n\r\nconst Providers = ({ children }: { children: React.ReactNode }) => {\r\n  return (\r\n    <StoreProvider>\r\n      <Authenticator.Provider>\r\n        <Auth>{children}</Auth>\r\n      </Authenticator.Provider>\r\n    </StoreProvider>\r\n  );\r\n};\r\n\r\nexport default Providers;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAiC;IAC5D,qBACE,8OAAC,sHAAA,CAAA,UAAa;kBACZ,cAAA,8OAAC,+MAAA,CAAA,gBAAa,CAAC,QAAQ;sBACrB,cAAA,8OAAC,uIAAA,CAAA,UAAI;0BAAE;;;;;;;;;;;;;;;;AAIf;uCAEe","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/panda/source/repos/re-aws/client/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useTheme } from \"next-themes\"\r\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\r\n          description: \"group-[.toast]:text-muted-foreground\",\r\n          actionButton:\r\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground font-medium\",\r\n          cancelButton:\r\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground font-medium\",\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Toaster }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,8OAAC,wIAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}